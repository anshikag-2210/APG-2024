import 'package:flutter/material.dart';
import 'package:flutter_pdfview/flutter_pdfview.dart';  // Import the PDF viewer package
import 'package:flutter/services.dart' show rootBundle;  // For loading from assets
import 'dart:io';
import 'package:path_provider/path_provider.dart';  // For accessing local directories

class PdfViewerPage extends StatefulWidget {
  final String pdfAssetPath;

  PdfViewerPage({required this.pdfAssetPath});

  @override
  _PdfViewerPageState createState() => _PdfViewerPageState();
}

class _PdfViewerPageState extends State<PdfViewerPage> {
  String? localPath;
  bool isLoading = true;

  @override
  void initState() {
    super.initState();
    loadPdfFromAssets();
  }

  // Load PDF from assets and copy to local directory to view it
  Future<void> loadPdfFromAssets() async {
    try {
      // Load the PDF file from assets
      final byteData = await rootBundle.load(widget.pdfAssetPath);
      
      // Get the temp directory
      final directory = await getApplicationDocumentsDirectory();
      
      // Create a file in the local temp directory
      final file = File('${directory.path}/temp.pdf');
      await file.writeAsBytes(byteData.buffer.asUint8List());

      // Set the path for the PDF viewer
      setState(() {
        localPath = file.path;
        isLoading = false;
      });
    } catch (e) {
      print("Error loading PDF: $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('PDF Viewer'),
      ),
      body: isLoading
          ? Center(child: CircularProgressIndicator()) // Show a loading indicator
          : PDFView(
              filePath: localPath,  // Provide the local path to the PDF viewer
              autoSpacing: false,
              enableSwipe: true,
              swipeHorizontal: false,
              onError: (error) {
                print(error.toString());
              },
              onRender: (_pages) {
                setState(() {
                  isLoading = false;
                });
              },
              onViewCreated: (PDFViewController pdfViewController) {
                // PDF is loaded and viewable
              },
              onPageChanged: (int? page, int? total) {
                print('Page changed: $page/$total');
              },
            ),
    );
  }
}
